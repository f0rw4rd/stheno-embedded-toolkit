# Dockerfile for building preload libraries with glibc cross-compilers
# Ubuntu-based for full glibc compatibility with Bootlin toolchains
# Used by: ./build-preload script for glibc preload library compilation

FROM ubuntu:20.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc g++ make automake autoconf libtool libtool-bin \
    pkg-config \
    git wget curl \
    tar gzip bzip2 xz-utils \
    python3 python3-pip \
    bison flex \
    texinfo \
    gawk \
    bc \
    libncurses5-dev \
    libssl-dev \
    zlib1g-dev \
    file \
    strace \
    && rm -rf /var/lib/apt/lists/*

# Create directories
RUN mkdir -p /build/toolchains-preload /build/output-preload /build/logs-preload && \
    mkdir -p /build/scripts/preload/lib /build/configs

# Create build user for consistency
RUN useradd -m -s /bin/bash builder && \
    echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Set ownership
RUN chown -R builder:builder /build

# Switch to builder user
USER builder
WORKDIR /build

# Copy scripts needed for downloading toolchains
COPY --chown=builder:builder scripts/preload/download-toolchains.sh /build/scripts/preload/
COPY --chown=builder:builder scripts/preload/download-all-toolchains.sh /build/scripts/preload/
COPY --chown=builder:builder scripts/preload/lib/common.sh /build/scripts/preload/lib/
COPY --chown=builder:builder scripts/lib/logging.sh /build/scripts/lib/

# Download all toolchains during build
# This ensures toolchains are available at runtime
RUN /build/scripts/preload/download-all-toolchains.sh

# Default command
CMD ["/build/scripts/preload/build-unified.sh"]